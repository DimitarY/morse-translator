<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MAPgCBAH4AAAB+AQCAfgMAgH8HAOD/j4Hx8=
</value>
  </data>
</root>